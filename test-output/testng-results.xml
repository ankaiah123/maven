<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="28999" started-at="2019-11-06T08:58:55Z" finished-at="2019-11-06T08:59:24Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="28999" started-at="2019-11-06T08:58:55Z" finished-at="2019-11-06T08:59:24Z">
      <class name="Tests.Tc_1">
        <test-method status="PASS" signature="ExtentReport()[pri:0, instance:Tests.Tc_1@7a79be86]" name="ExtentReport" is-config="true" duration-ms="313" started-at="2019-11-06T14:28:55Z" finished-at="2019-11-06T14:28:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ExtentReport -->
        <test-method status="PASS" signature="r()[pri:0, instance:Tests.Tc_1@7a79be86]" name="r" is-config="true" duration-ms="31" started-at="2019-11-06T14:28:55Z" finished-at="2019-11-06T14:28:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- r -->
        <test-method status="PASS" signature="launch()[pri:0, instance:Tests.Tc_1@7a79be86]" name="launch" is-config="true" duration-ms="12105" started-at="2019-11-06T14:28:55Z" finished-at="2019-11-06T14:29:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launch -->
        <test-method status="PASS" signature="Tc1()[pri:0, instance:Tests.Tc_1@7a79be86]" name="Tc1" duration-ms="1930" started-at="2019-11-06T14:29:07Z" finished-at="2019-11-06T14:29:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Tc1 -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Tc_1@7a79be86]" name="tearDown" is-config="true" duration-ms="24" started-at="2019-11-06T14:29:10Z" finished-at="2019-11-06T14:29:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Tc1 status=SUCCESS method=Tc_1.Tc1()[pri:0, instance:Tests.Tc_1@7a79be86] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="launch()[pri:0, instance:Tests.Tc_1@7a79be86]" name="launch" is-config="true" duration-ms="13045" started-at="2019-11-06T14:29:10Z" finished-at="2019-11-06T14:29:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launch -->
        <test-method status="FAIL" signature="salman()[pri:0, instance:Tests.Tc_1@7a79be86]" name="salman" duration-ms="80" started-at="2019-11-06T14:29:23Z" finished-at="2019-11-06T14:29:23Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [13] but found [12]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [13] but found [12]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:389)
	at org.testng.Assert.assertEquals(Assert.java:399)
	at Tests.Tc_1.salman(Tc_1.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- salman -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Tc_1@7a79be86]" name="tearDown" is-config="true" duration-ms="332" started-at="2019-11-06T14:29:23Z" finished-at="2019-11-06T14:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=salman status=FAILURE method=Tc_1.salman()[pri:0, instance:Tests.Tc_1@7a79be86] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.Tc_1 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
